---
interface Props {
  className?: string;
}

const { className = "" } = Astro.props;

const toggleTheme = () => {
  const html = document.documentElement;
  const isDark = html.getAttribute('data-theme') === 'dark';
  const newTheme = isDark ? 'light' : 'dark';
  
  // Update HTML attribute
  html.setAttribute('data-theme', newTheme);
  
  // Save to localStorage
  localStorage.setItem('theme', newTheme);
};

// Initialize theme on component mount
const initializeTheme = () => {
  // Check for saved theme preference
  const savedTheme = localStorage.getItem('theme');
  
  // If no saved preference, use system theme
  if (!savedTheme) {
    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    document.documentElement.setAttribute('data-theme', prefersDark ? 'dark' : 'light');
  } else {
    document.documentElement.setAttribute('data-theme', savedTheme);
  }
};

// Run initialization
initializeTheme();
---

<button
  onClick={toggleTheme}
  class={`inline-flex items-center justify-center rounded-full p-1 transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary ${className}`}
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
    class="w-5 h-5 transition-colors"
  >
    <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z" />
  </svg>
</button>
